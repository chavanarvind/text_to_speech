def finalize_output(df, output_path):
    # Copy mapped values to final output columns
    df['AI_FINAL_CATEGORY'] = df['Mapped_File_Category']
    df['AI_FINAL_CATEGORY_CONFIDENCE'] = df['Final Category Confidence Score']
    df['AI_MATCHING_REASON_FINAL_CATEGORY'] = df['category_matching_reason']

    df['AI_FINAL_SUBCATEGORY'] = df['Mapped_File_Subcategory']
    df['AI_FINAL_SUBCATEGORY_CONFIDENCE'] = df['Final Subcategory Confidence Score']
    df['AI_MATCHING_REASON_FINAL_SUBCATEG'] = df['subcategory_matching_reason']

    # ✅ Fix 1: Invalidate subcategory confidence/reason if subcategory is missing
    invalid_subcat_mask = df['AI_FINAL_SUBCATEGORY'].isna() | df['AI_FINAL_SUBCATEGORY'].astype(str).str.strip().eq("")
    df.loc[invalid_subcat_mask, 'AI_FINAL_SUBCATEGORY_CONFIDENCE'] = None
    df.loc[invalid_subcat_mask, 'AI_MATCHING_REASON_FINAL_SUBCATEG'] = None
    df.loc[invalid_subcat_mask, 'needs_subcategory_model'] = True
    df.loc[invalid_subcat_mask, 'needs_model'] = True

    # ✅ Fix 2: Invalidate category confidence/reason if category is missing
    invalid_cat_mask = df['AI_FINAL_CATEGORY'].isna() | df['AI_FINAL_CATEGORY'].astype(str).str.strip().eq("")
    df.loc[invalid_cat_mask, 'AI_FINAL_CATEGORY_CONFIDENCE'] = None
    df.loc[invalid_cat_mask, 'AI_MATCHING_REASON_FINAL_CATEGORY'] = None
    df.loc[invalid_cat_mask, 'needs_category_model'] = True
    df.loc[invalid_cat_mask, 'needs_model'] = True

    # Drop temp columns
    df.drop(columns=[
        'Mapped_File_Category', 'Final Category Confidence Score', 'category_matching_reason',
        'Mapped_File_Subcategory', 'Final Subcategory Confidence Score', 'subcategory_matching_reason'
    ], inplace=True, errors='ignore')

    df.to_parquet(output_path, index=False)
    print(f"[✅] Final output saved to: {output_path}")
