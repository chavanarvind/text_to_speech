import pandas as pd
import glob
import os

# Load sample data from generated chunks
input_path = './data/target_map_cleaned_non_null_target'
files = glob.glob(os.path.join(input_path, '*.parquet'))

# Load a sample (not full to avoid memory issue)
df = pd.concat([pd.read_parquet(f) for f in files[:2]], ignore_index=True)

# EDA summary dictionary
summary = {
    "shape": df.shape,
    "columns": df.columns.tolist(),
    "missing_values": df.isnull().sum().to_dict(),
    "sample_rows": df.sample(5, random_state=42).to_dict(orient='records'),
    "final_category_distribution": df['Final Category'].value_counts(normalize=True).round(3).to_dict(),
    "categorical_summary": {
        col: df[col].nunique() for col in df.select_dtypes(include='object').columns
    },
    "numeric_summary": df.select_dtypes(include='number').describe().round(2).to_dict()
}

summary
