def process_file(file_idx, file):
    try:
        print(f" Start: {os.path.basename(file)}")
        start = time.time()

        table = pq.read_table(file, columns=columns_to_read)
        df = pl.from_arrow(table).unique()

        # Left join with target map
        joined = df.join(target_map_df, on='CMPNT_CAT_CD_DESC', how='left')

        # Filter for Final Category == 'PKG' or 'CHM'
        filtered = joined.filter(pl.col('Final Category').is_in(['PKG', 'CHM']))

        # Skip saving if filtered is empty
        if filtered.is_empty():
            print(f" Skipped: {os.path.basename(file)} (no matching categories)")
            return

        # Save compressed output
        out_file = os.path.join(output_path, f'mapped_file{file_idx}.parquet')
        filtered.write_parquet(out_file, compression='snappy')

        print(f" Done: {os.path.basename(file)} → {out_file} | ⏱️ {time.time() - start:.2f}s")
    except Exception as e:
        print(f" Error: {os.path.basename(file)} -> {e}")
