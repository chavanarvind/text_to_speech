def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--input_path", type=str, required=True)
    parser.add_argument("--mapping_csv", type=str, required=True)
    parser.add_argument("--mapped_output", type=str, required=True)
    parser.add_argument("--unmapped_output", type=str, required=True)
    args = parser.parse_args()

    run = Run.get_context()

    # === Locate CSV inside mounted directory ===
    csv_files = glob.glob(os.path.join(args.mapping_csv, "*.csv"))
    if not csv_files:
        raise FileNotFoundError(f"No CSV file found in mapped directory: {args.mapping_csv}")

    mapping_path = csv_files[0]
    print(f"📥 Reading mapping from: {mapping_path}")
    mapping_df = pd.read_csv(mapping_path)
    print(f"📊 Mapping rows: {len(mapping_df)}")

    # === Process input parquet files ===
    all_files = glob.glob(os.path.join(args.input_path, "*.parquet"))
    print(f"📁 Total input parquet files found: {len(all_files)}")

    for file_path in all_files:
        process_file(file_path, mapping_df, args.mapped_output, args.unmapped_output)
