import os
import time
import polars as pl

# --- Paths ---
input_csv = './data/sample.csv'
output_file = './data/sample.parquet'
os.makedirs(os.path.dirname(output_file), exist_ok=True)

# --- Load mapping ---
target_map_df = pl.read_csv('./data/target_map.csv', columns=['CMPNT_CAT_CD_DESC', 'Final Category']).unique()

# --- Required columns to extract ---
columns_to_read = [
    'MATL_SHRT_DESC',
    'CMPNT_MATL_DESC',
    'CMPNT_MATL_TYPE_CD',
    'CMPNT_CAT_CD_DESC',
    'CMPNT_UOM_CD'
]

try:
    print(f"⏳ Start processing: {os.path.basename(input_csv)}")
    start = time.time()

    # Read CSV and select required columns
    df = pl.read_csv(input_csv).select(columns_to_read).unique()

    # Left join with target mapping
    joined = df.join(target_map_df, on='CMPNT_CAT_CD_DESC', how='left')

    # Save result as Parquet
    joined.write_parquet(output_file, compression='snappy')

    print(f"✅ Done: {input_csv} → {output_file} | ⏱️ {time.time() - start:.2f}s")
except Exception as e:
    print(f"❌ Error processing {input_csv}: {e}")
