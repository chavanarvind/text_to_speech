import polars as pl
import glob
import os
from collections import defaultdict

input_path = './data/target_map_parquet_files'
files = glob.glob(os.path.join(input_path, '*.parquet'))

# Map: frozenset of columns ‚Üí list of files with that schema
schema_groups = defaultdict(list)

for f in files:
    try:
        df = pl.read_parquet(f)
        col_set = frozenset(df.columns)
        schema_groups[col_set].append(os.path.basename(f))
    except Exception as e:
        print(f"‚ùå Failed to read {os.path.basename(f)}: {e}")

# Print grouped results
for i, (col_set, file_list) in enumerate(schema_groups.items(), 1):
    print(f"\nüîπ Schema Group {i} - {len(file_list)} file(s)")
    print("Columns:", sorted(col_set))
    print("Files:")
    for fname in file_list:
        print(f"  - {fname}")
