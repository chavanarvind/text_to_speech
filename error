# üü£ Step 3: Conditional Forced Pair Logic
if "nlp_list_erp" in round_name.lower():
    print(f"üö® Running FORCE PAIR matching for {round_name} üö®")

    # ‚úÖ Filter only unmatched reference pairs
    forced_pairs = reference_table[[ERP_PART_ID, TRU_SPEC_ID]].drop_duplicates()
    unmatched_pairs = forced_pairs.merge(
        matches[[ERP_PART_ID, TRU_SPEC_ID]].drop_duplicates(),
        on=[ERP_PART_ID, TRU_SPEC_ID],
        how='left',
        indicator=True
    ).query('_merge == "left_only"').drop(columns=['_merge'])

    print(f"‚ö†Ô∏è {len(unmatched_pairs)} unmatched reference pairs for forced pair logic.")

    # ‚úÖ üî• FILTER pairs not present in ERP/TRU FULL datasets
    erp_ids_in_full = set(erp_full[ERP_PART_ID])
    tru_ids_in_full = set(tru_full[TRU_SPEC_ID])

    valid_pairs = unmatched_pairs[
        unmatched_pairs[ERP_PART_ID].isin(erp_ids_in_full) &
        unmatched_pairs[TRU_SPEC_ID].isin(tru_ids_in_full)
    ].copy()

    missing_pairs = unmatched_pairs[
        ~unmatched_pairs[ERP_PART_ID].isin(erp_ids_in_full) |
        ~unmatched_pairs[TRU_SPEC_ID].isin(tru_ids_in_full)
    ]

    if not missing_pairs.empty:
        print(f"‚ö†Ô∏è {len(missing_pairs)} pairs missing in ERP/TRU. Skipping these for force pair logic.")
        print(missing_pairs.head(10))  # Debug first few rows
        missing_pairs.to_csv("missing_reference_pairs.csv", index=False)

    # ‚úÖ Only process valid pairs
    if not valid_pairs.empty:
        forced_matches = erp_full[ERP_MATCH_COLS].merge(
            valid_pairs, on=ERP_PART_ID, how='inner'
        ).merge(
            tru_full[TRU_MATCH_COLS],
            left_on=['SRC_SYS_CD', 'PLNT_CD', TRU_SPEC_ID],
            right_on=['SRC_SYS_CD', 'PLNT_CD', TRU_SPEC_ID],
            how='inner'
        )

        print(f"‚úÖ Found {len(forced_matches)} forced pair matches in {round_name}")

        forced_matches[SCORE_COL] = 1
        forced_matches[UNIFIED_MC_COL] = forced_matches[f'{ERP_MAT_NUM}_original'].copy()
        forced_matches['is_matched'] = True
        forced_matches['Matching Reason'] = round_name + ' (forced pair)'
        forced_matches['confidence'] = 'high'

        forced_matches = add_matches_bundles(forced_matches, bundles, tru_full)

        # Append forced matches to main matches
        matches = pd.concat([matches, forced_matches], ignore_index=True)
        matches.drop_duplicates(subset=NON_DUPLICATES_SET, inplace=True)
    else:
        print("üö´ No valid forced pairs to process.")
else:
    print(f"üö´ Skipping FORCE PAIR matching for {round_name}")
