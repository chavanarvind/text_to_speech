# STEP 1: Identify ERP-only material codes
all_erp_codes = set(erp_discarded[ERP_MAT_NUM].dropna())
all_tru_codes = set(tru_discarded[TRU_MAT_NUM].dropna())
erp_only_codes = all_erp_codes - all_tru_codes

# STEP 2: Filter ERP records not present in TRU
erp_only_df = erp_discarded[erp_discarded[ERP_MAT_NUM].isin(erp_only_codes)].copy()

# STEP 3: Align column structure with `unmatched`
missing_cols = list(set(unmatched.columns) - set(erp_only_df.columns))
for col in missing_cols:
    erp_only_df[col] = None
erp_only_df = erp_only_df[unmatched.columns]

# STEP 4: Set unmatched flags and metadata
erp_only_df['is_matched'] = False
erp_only_df[UNIFIED_MC_COL] = erp_only_df[ERP_MAT_NUM]
erp_only_df['Matching Reason'] = 'Off Spec Code only in ERP (no match in TRU)'
erp_only_df['PLNT_CD'] = erp_only_df.get('PLNT_CD', 'Not Found')
erp_only_df['SRC_SYS_CD'] = erp_only_df.get('SRC_SYS_CD', 'Not Found')

# STEP 5: Append to unmatched
unmatched = pd.concat([unmatched, erp_only_df], ignore_index=True)
