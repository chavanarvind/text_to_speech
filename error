from azureml.pipeline.core import Schedule, ScheduleRecurrence, TimeZone

pipeline.validate()

if ENV == 'prod':
    experiment_name = "bom_pipeline_pull_merge_preprocess"

    # Publish the pipeline (required to get a stable ID for scheduling)
    published_pipeline = pipeline.publish(name="RPM_Categorization_Pipeline_Prod")
    print(f"✅ Published pipeline: {published_pipeline.name}")
    print(f"📌 Pipeline ID: {published_pipeline.id}")

    # Define recurrence — Every Tuesday 6:30 PM UTC = Wednesday 12:00 AM IST
    recurrence = ScheduleRecurrence(
        frequency='Week',
        interval=1,
        week_days=['Tuesday'],
        time_of_day='18:30',
        time_zone=TimeZone.UTC
    )

    schedule_name = "RPM_Catagarization_Prod"

    # Remove any existing schedule with the same name
    for sched in Schedule.list(ws):
        if sched.name == schedule_name:
            print(f"🛑 Disabling and deleting existing schedule: {sched.name}")
            sched.disable()
            sched.delete()

    # Create a new recurring schedule using the published pipeline
    new_schedule = Schedule.create(
        workspace=ws,
        name=schedule_name,
        pipeline_id=published_pipeline.id,
        experiment_name=experiment_name,
        recurrence=recurrence,
        description="Runs RPM Categorization pipeline every Wednesday 12:00 AM IST",
        wait_for_provisioning=True
    )

    print(f"✅ New schedule created: {new_schedule.name}")
    print("📅 Schedule details:")
    print(f"    - Runs every Tuesday 18:30 UTC (Wednesday 12:00 AM IST)")
    print(f"    - Associated Pipeline: {published_pipeline.name}")

else:
    print("ℹ️ Dev environment detected — skipping pipeline submission and scheduling.")
