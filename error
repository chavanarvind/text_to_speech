subcat_predictions = []
valid_categories = ['CHM', 'PKG', 'FNW']
for cat in valid_categories:
    subset = df_sub_pred[df_sub_pred['Final_Prediction'] == cat].copy()
    if not subset.empty:
        log(f"[DEBUG] Running subcategory model for '{cat}': {len(subset)} rows")
        model_path = Model.get_model_path(f"RPM_Category_model_full_{cat}_V1", _workspace=ws)
        sub_model = joblib.load(os.path.join(model_path, "final_model.joblib"))
        sub_encoder = joblib.load(os.path.join(model_path, "ordinal_encoder.pkl"))
        sub_scaler = joblib.load(os.path.join(model_path, "scaler.pkl"))

        desc_emb = encoder.encode(subset['CMPNT_MATL_DESC_CLEAN'].astype(str).tolist(),
                                  batch_size=256, show_progress_bar=True, convert_to_numpy=True)
        length_scaled = sub_scaler.transform(subset[['CMPNT_MATL_DESC_LEN']])
        cat_encoded = sub_encoder.transform(subset[['UNIT_GROUP', 'CMPNT_MATL_TYPE_CATEGORY']])
        X_sub = np.hstack([desc_emb, length_scaled, cat_encoded])

        y_proba_sub = sub_model.predict_proba(X_sub)
        y_score_sub = np.max(y_proba_sub, axis=1)
        y_sub = sub_model.predict(X_sub)

        subset['Final Subcategory'] = np.where(y_score_sub < 0.6, subset['Final_Prediction'], y_sub)
        subset['Predicted_Subcategory'] = y_sub
        subset['Subcategory_Score'] = y_score_sub
        subset['prediction_flag_subcategory'] = np.where(y_score_sub < 0.6, 'Low Confidence', 'High Confidence')
        subset['Subcategory_Model'] = f"RPM_Category_model_full_{cat}_V1"
        subcat_predictions.append(subset)

# Fallback for categories not in valid list
fallback_rows = df_sub_pred[~df_sub_pred['Final_Prediction'].isin(valid_categories)].copy()
fallback_rows['Final Subcategory'] = fallback_rows['Final_Prediction']
fallback_rows['Subcategory_Score'] = 0.9
fallback_rows['Subcategory_Model'] = 'default_fallback'
fallback_rows['Predicted_Subcategory'] = fallback_rows['Final Subcategory']
fallback_rows['prediction_flag_subcategory'] = 'Fallback'

# Directly mapped rows
df_sub_mapped['Subcategory_Score'] = 1.0
df_sub_mapped['Subcategory_Model'] = 'direct_mapping'
df_sub_mapped['Predicted_Subcategory'] = df_sub_mapped['Final Subcategory']
df_sub_mapped['prediction_flag_subcategory'] = 'Mapped'

# Combine all
df_sub_pred_final = pd.concat(subcat_predictions + [fallback_rows], ignore_index=True)
df_out = pd.concat([df_sub_pred_final, df_sub_mapped], axis=0).sort_index()
log(f"[DEBUG] Total rows after subcategory + fallback merge: {len(df_out)}")
df_out['source_file'] = f
all_results.append(df_out)
