import os
import re
import glob
import pandas as pd
import spacy

# Load abbreviation map
abbrev_df = pd.read_csv('./data/abbreviation_expension_updated.csv')
abbrev_map = {k.lower(): v for k, v in zip(abbrev_df['Abbreviation_list'], abbrev_df['Abbreviation_Expension'])}
abbrev_pattern = re.compile(r'\b(' + '|'.join(re.escape(k) for k in abbrev_map.keys()) + r')\b', flags=re.IGNORECASE)

# Utils
def expand_abbreviations(text):
    if pd.isna(text): return text
    return abbrev_pattern.sub(lambda m: abbrev_map[m.group(0).lower()], text)

def clean_text(text):
    if pd.isna(text): return text
    text = re.sub(r'[^a-z0-9\s]', ' ', text.lower())
    return re.sub(r'\s+', ' ', text).strip()

def get_unit_group(unit):
    if pd.isna(unit): return None
    unit = str(unit).strip().upper()
    chem = {'KG', 'KGS', 'KGA', 'KGW', 'G', 'GR', 'GM', 'MG', 'LB', 'LBS', 'OZ', 'OZA', 'GW', 'TON', 'DR'}
    liquid = {'L', 'LT', 'ML', 'CC', 'CL', 'CCM', 'GLL'}
    discrete = {'EA', 'PC', 'PCS', 'PKT', 'PK', 'PAK', 'PCK', 'CS', 'CSE', 'CT', 'CA', 'ST', 'GRO', 'BX'}
    containers = {'BOT', 'BOTTLE', 'ROLL', 'ROL', 'REEL', 'KAR'}
    dimensional = {'FT', 'YD', 'KM', 'DM', 'M', 'M1', 'M2', 'KM2', 'YD2', 'FT3', 'SQM', 'MYD', 'MI', 'SM', 'LM', 'LF', 'MH', 'KN', 'CH'}
    return (
        'CHM' if unit in chem else
        'Liquid' if unit in liquid else
        'Discrete' if unit in discrete else
        'Containers' if unit in containers else
        'Dimensional' if unit in dimensional else
        'Unclassified'
    )

# Process files
input_path = './data/target_map_parquet_files'
for file in glob.glob(os.path.join(input_path, '*.parquet')):
    try:
        df = pd.read_parquet(file)

        df['MATL_SHRT_DESC'] = df['MATL_SHRT_DESC'].apply(expand_abbreviations).apply(clean_text)
        df['CMPNT_MATL_DESC'] = df['CMPNT_MATL_DESC'].apply(expand_abbreviations).apply(clean_text)
        df['MATL_SHRT_DESC_AND_CMPNT_MATL_DESC'] = (
            df['MATL_SHRT_DESC'].fillna('') + ' ' + df['CMPNT_MATL_DESC'].fillna('')
        ).str.strip().replace('', pd.NA)

        df['CMPNT_CAT_CLEAN'] = df['CMPNT_CAT_CD_DESC'].fillna('').apply(clean_text).replace('', pd.NA)
        df['UNIT_GROUP'] = df['CMPNT_UOM_CD'].apply(get_unit_group)

        df.to_parquet(file, index=False)
        print(f"Updated: {file}")

    except Exception as e:
        print(f"Error updating {file}: {e}")
