(videotransenv) PS C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis> py .\video_app1.py
[2025-06-30 19:10:38.192] [ctranslate2] [thread 20152] [warning] The compute type inferred from the saved model is float16, but the target device or backend do not support efficient float16 computation. The model weights have been automatically converted to use the float32 compute type instead.
* Running on local URL:  http://127.0.0.1:7860
* To create a public link, set `share=True` in `launch()`.
Traceback (most recent call last):
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\gradio\queueing.py", line 626, in process_events
    response = await route_utils.call_process_api(
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\gradio\route_utils.py", line 322, in call_process_api
    output = await app.get_blocks().process_api(
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\gradio\blocks.py", line 2220, in process_api
    result = await self.call_function(
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\gradio\blocks.py", line 1731, in call_function
    prediction = await anyio.to_thread.run_sync(  # type: ignore
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\anyio\_backends\_asyncio.py", line 2470, in run_sync_in_worker_thread
    return await future
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\anyio\_backends\_asyncio.py", line 967, in run
    result = context.run(func, *args)
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\videotransenv\lib\site-packages\gradio\utils.py", line 940, in wrapper
    response = f(*args, **kwargs)
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\video_app1.py", line 125, in full_pipeline       
    diarized_segments, source_lang = transcribe_and_diarize(audio_path)
  File "C:\Users\AChava05\OneDrive - Kenvue\AChava05\video_analysis\video_app1.py", line 54, in transcribe_and_diarize
    return diarized_text, info['language']
TypeError: 'TranscriptionInfo' object is not subscriptable
