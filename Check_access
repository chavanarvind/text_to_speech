import azure.cognitiveservices.speech as speechsdk
import requests
import json
import os

# Azure credentials
AZURE_SPEECH_KEY = "your-key"
AZURE_REGION = "your-region"  # e.g., eastus
AZURE_ENDPOINT = f"https://{AZURE_REGION}.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1"

# Path to your audio file (WAV/MP3/MP4 etc.)
AUDIO_PATH = "your_audio_file.wav"

def transcribe_with_sdk(audio_path, language="en-US"):
    try:
        speech_config = speechsdk.SpeechConfig(subscription=AZURE_SPEECH_KEY, region=AZURE_REGION)
        speech_config.speech_recognition_language = language

        audio_input = speechsdk.audio.AudioConfig(filename=audio_path)
        recognizer = speechsdk.SpeechRecognizer(speech_config=speech_config, audio_config=audio_input)

        print("üß† Trying transcription with Azure SDK...")
        result = recognizer.recognize_once()

        if result.reason == speechsdk.ResultReason.RecognizedSpeech:
            print("‚úÖ SDK transcription succeeded.")
            return result.text
        elif result.reason == speechsdk.ResultReason.Canceled:
            details = result.cancellation_details
            print(f"‚ö†Ô∏è SDK canceled: {details.reason}, {details.error_details}")
            raise Exception("SDK transcription failed")

    except Exception as e:
        print(f"‚ö†Ô∏è SDK failed: {e}")
        return None

def transcribe_with_rest(audio_path, language="en-US"):
    print("üîÅ Falling back to REST API transcription...")

    headers = {
        "Ocp-Apim-Subscription-Key": AZURE_SPEECH_KEY,
        "Content-Type": "audio/wav",  # adjust if using MP3: audio/mpeg
        "Accept": "application/json;text/xml"
    }

    params = {
        "language": language,
        "format": "simple"
    }

    with open(audio_path, "rb") as audio_file:
        response = requests.post(
            AZURE_ENDPOINT,
            headers=headers,
            params=params,
            data=audio_file
        )

    if response.status_code == 200:
        result = response.json()
        print("‚úÖ REST transcription succeeded.")
        return result.get("DisplayText")
    else:
        print(f"‚ùå REST failed: {response.status_code} - {response.text}")
        return None

def transcribe_audio(audio_path, language="en-US"):
    transcript = transcribe_with_sdk(audio_path, language)
    if transcript:
        return transcript
    return transcribe_with_rest(audio_path, language)

# Example usage
transcript = transcribe_audio(AUDIO_PATH, language="en-US")
print("üìù Transcript:", transcript)
