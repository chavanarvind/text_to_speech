df_erp_with_additional_id = erp[ERP_MATCH_COLS].merge(
    reference_table[[ERP_PART_ID, TRU_SPEC_ID]].drop_duplicates(),
    on=ERP_PART_ID,
    how='inner'
)

# üü£ Add debug block **before strict merge**
if '30055433' in df_erp_with_additional_id['CMPNT_MATL_NUM'].astype(str).values \
    or 'PC-008694' in df_erp_with_additional_id['TRU_SPEC_ID'].astype(str).values:
    
    print("\n=== DEBUG: Pre-merge diagnostics for CMPNT_MATL_NUM: 30055433 and CHILD_NM: PC-008694 ===")
    erp_debug = df_erp_with_additional_id.query("CMPNT_MATL_NUM == '30055433'")
    tru_debug = tru[TRU_MATCH_COLS].query("TRU_SPEC_ID == 'PC-008694'")
    ref_debug = reference_table.query("CMPNT_MATL_NUM == '30055433' and CHILD_NM == 'PC-008694'")

    print("\n‚úÖ ERP DEBUG:")
    print(erp_debug if not erp_debug.empty else "‚ùå No ERP record for 30055433")

    print("\n‚úÖ TRU DEBUG:")
    print(tru_debug if not tru_debug.empty else "‚ùå No TRU record for PC-008694")

    print("\n‚úÖ REF TABLE DEBUG:")
    print(ref_debug if not ref_debug.empty else "‚ùå No REF record for 30055433 -> PC-008694")

    if not erp_debug.empty and not tru_debug.empty:
        print("\nüîé Checking SRC_SYS_CD mismatches:")
        print("ERP SRC_SYS_CD:", erp_debug['SRC_SYS_CD'].unique())
        print("TRU SRC_SYS_CD:", tru_debug['SRC_SYS_CD'].unique())

        print("\nüîé Checking PLNT_CD mismatches:")
        print("ERP PLNT_CD:", erp_debug['PLNT_CD'].unique())
        print("TRU PLNT_CD:", tru_debug['PLNT_CD'].unique())

        print("\nüîé Checking ERP_MAT_NUM vs TRU_SPEC_ID key formatting:")
        print("ERP_MAT_NUM:", erp_debug['CMPNT_MATL_NUM'].unique())
        print("TRU_SPEC_ID:", tru_debug['TRU_SPEC_ID'].unique())

        # Check for leading zeros or type mismatch
        print("\nüîé Datatypes for ERP_MAT_NUM and TRU_SPEC_ID:")
        print("ERP_MAT_NUM dtype:", erp_debug['CMPNT_MATL_NUM'].dtype)
        print("TRU_SPEC_ID dtype:", tru_debug['TRU_SPEC_ID'].dtype)

        # Strip and normalize keys to compare
        erp_ids = set(erp_debug['CMPNT_MATL_NUM'].astype(str).str.strip())
        tru_ids = set(tru_debug['TRU_SPEC_ID'].astype(str).str.strip())
        print("\nüü£ Normalized ERP IDs:", erp_ids)
        print("üü£ Normalized TRU IDs:", tru_ids)
        print("‚úÖ Overlap:", erp_ids.intersection(tru_ids))
    else:
        print("\n‚ö†Ô∏è Cannot check mismatches because one side is empty.")
    print("\n=== END DEBUG ===\n")

# üü£ Now perform strict merge
matched_per_id = df_erp_with_additional_id.merge(
    tru[TRU_MATCH_COLS],
    left_on=['SRC_SYS_CD', 'PLNT_CD', ERP_MAT_NUM, TRU_SPEC_ID],
    right_on=['SRC_SYS_CD', 'PLNT_CD', TRU_MAT_NUM, TRU_SPEC_ID],
    how='inner'
)
