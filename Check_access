import os
import requests
import zipfile

# Step 1: Setup directory for temporary DLLs
dll_folder = "dll_temp"
os.makedirs(dll_folder, exist_ok=True)

# Step 2: Define DLLs and their trusted download URLs
dll_urls = {
    "libzbar-64.dll": "https://github.com/NaturalHistoryMuseum/barcode-reader-dlls/releases/download/0.1/libzbar-64.dll",
    "libiconv.dll": "https://github.com/NaturalHistoryMuseum/barcode-reader-dlls/releases/download/0.1/libiconv.dll"
}

# Step 3: Remove existing DLLs if any
for name in dll_urls:
    path = os.path.join(dll_folder, name)
    if os.path.exists(path):
        os.remove(path)
        print(f"üóë Removed old {name}")

# Step 4: Download the DLLs
for name, url in dll_urls.items():
    print(f"‚¨áÔ∏è Downloading {name}...")
    try:
        response = requests.get(url, timeout=30)
        if response.status_code == 200:
            with open(os.path.join(dll_folder, name), "wb") as f:
                f.write(response.content)
            print(f"‚úÖ Downloaded: {name}")
        else:
            print(f"‚ùå Failed: {name} | Status code: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error downloading {name}: {e}")

# Step 5: Create a zip package of the DLLs
zip_path = "pyzbar_dlls.zip"
with zipfile.ZipFile(zip_path, "w") as zipf:
    for name in dll_urls:
        dll_path = os.path.join(dll_folder, name)
        if os.path.exists(dll_path):
            zipf.write(dll_path, arcname=name)
            print(f"üì¶ Added {name} to {zip_path}")

print(f"\n‚úÖ All DLLs zipped into: {zip_path}")
