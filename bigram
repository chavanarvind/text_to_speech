def process_category(category, descriptions, threshold):
    unique_words = []

    for desc in descriptions:
        doc = nlp(desc)
        words = {token.lemma_ for token in doc if token.is_alpha and not token.is_stop}
        unique_words.extend(words)

    unigram_counts = Counter(unique_words)

    unigrams = [
        {'category': category, 'word': word, 'count': count}
        for word, count in unigram_counts.items() if count >= threshold
    ]

    # For bigrams, deduplication per row isnâ€™t typical â€” skip or ask if needed
    bigram_words = []
    for desc in descriptions:
        doc = nlp(desc)
        words = [token.lemma_ for token in doc if token.is_alpha and not token.is_stop]
        bigram_words.extend(zip(words, islice(words, 1, None)))

    bigram_counts = Counter(bigram_words)
    bigrams = [
        {'category': category, 'bigram': f'{w1} {w2}', 'count': count}
        for (w1, w2), count in bigram_counts.items() if count >= threshold
    ]

    return unigrams, bigrams
